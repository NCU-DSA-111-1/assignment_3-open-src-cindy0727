In Lab1, we use Arduino to control the LED. Arduino is a micro control unit and we could compile code through the same name software. In the beginning, setting up the baud rate and the pin for input and output is indispensable. Baud rate lets the two devices communicate successfully in the same transmission frequency. In this Lab, I know how to accomplished what I want by using Arduino, which is the most important thing in finishing the final project.
	In Lab2, we used ESP8266 to remote control the LED and Arduino. ESP8266 is a micro control unit has the function of WIFI connection. There are two UART on it, RXD for receiving external data and TXD for transmitting external data. In this Lab, setting up the correct baud rate is more important than Lab1 because it is remote control instead of through wire. 
	In Lab3, we use Arduino to control the LED again. Compared with Lab1, we should output the data which is base on PWM. We can use digital pin to simulate the analogy output by changing high or low by digital signal. In Lab3-3 and Lab3-4, we need to connect two Arduino with wire. For instance, the transmitter uses pin 3 to give PMW output and the receiver uses A0 to transform the digital signal in analogy. 
	In Lab4, we learn UAV. We use DroneKit as user interface, MAVLink as communication protocol, Ardupilot as flying program, Linux as operating system and Pixhawk as hardware. In this Lab, without using the drone, we use SITL to simulate instead. In the end of this Lab, I saw a virtual drone flying on the google map in the route we commanded. 
	In Lab5, two computers communicate in unicast by applying socket. Unicast is also known as one to one, transmitting data from one to the other. Socket consists of IP(Internet Protocol) and Port. If two computers have each otherâ€™s IP and the same port, they can communicate successfully. Through this Lab, I further understood the socket by practice, which benefitted to me in learning Netwoking introduction.
	In Lab6, we use Xbee module to realize unicast and broadcast. AT command is a specific command language originally developed by Dennis Hayes. The command set consists of a series of short text strings which can be combined to produce commands for operations of the connection. In broadcast, we need to set up one computer in mode coordinator. It is the beginning of the network. In this Lab, I know the importance of socket. If I set up different IP or port, the broadcast would be failed. 
